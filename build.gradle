plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.codehows'
version = 'be_tealim'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // https://mvnrepository.com/artifact/org.webjars.bower/jquery
    implementation 'org.webjars.bower:jquery:3.7.1'
    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // zxing 라이브러리
    implementation 'com.google.zxing:core:3.5.3'
    implementation 'com.google.zxing:javase:3.5.3'

    //QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'jakarta.validation:jakarta.validation-api'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 이메일 보내기
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.3'
    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'



    // https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox
    implementation 'org.apache.pdfbox:pdfbox:3.0.1'
    // https://mvnrepository.com/artifact/org.apache.pdfbox/fontbox
    implementation 'org.apache.pdfbox:fontbox:3.0.1'

    // https://mvnrepository.com/artifact/net.java.dev.jna/jna
    //implementation 'net.java.dev.jna:jna:4.1.0'

    // https://mvnrepository.com/artifact/net.java.dev.jna/jna
    implementation 'net.java.dev.jna:jna:5.13.0'



    // jsoup HTML parser library @ https://jsoup.org/
    implementation 'org.jsoup:jsoup:1.18.1'

    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.14'



}

tasks.named('test') {
    useJUnitPlatform()
}

// 테스트 코드를 제외한 빌드 수행
tasks.withType(Test) {
    enabled = false
}

//bootRun {
//    jvmArgs = ["-Djava.library.path=$buildDir/classes/java/main"]
//}
